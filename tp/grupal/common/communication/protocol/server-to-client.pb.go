// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/client-server-messages/server-to-client.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageStatus int32

const (
	MessageStatus_SUCCESS MessageStatus = 0
	MessageStatus_FAIL    MessageStatus = 1
	MessageStatus_PENDING MessageStatus = 2
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
		2: "PENDING",
	}
	MessageStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
		"PENDING": 2,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_server_messages_server_to_client_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_proto_client_server_messages_server_to_client_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{0}
}

type BatchAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Status        MessageStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchAck) Reset() {
	*x = BatchAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAck) ProtoMessage() {}

func (x *BatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAck.ProtoReflect.Descriptor instead.
func (*BatchAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{0}
}

func (x *BatchAck) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchAck) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

type FileEOFAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        MessageStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEOFAck) Reset() {
	*x = FileEOFAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEOFAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEOFAck) ProtoMessage() {}

func (x *FileEOFAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEOFAck.ProtoReflect.Descriptor instead.
func (*FileEOFAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{1}
}

func (x *FileEOFAck) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

type SyncAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAck) Reset() {
	*x = SyncAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAck) ProtoMessage() {}

func (x *SyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAck.ProtoReflect.Descriptor instead.
func (*SyncAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{2}
}

func (x *SyncAck) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type FinishAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinishAck) Reset() {
	*x = FinishAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinishAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishAck) ProtoMessage() {}

func (x *FinishAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishAck.ProtoReflect.Descriptor instead.
func (*FinishAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{3}
}

type DisconnectAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectAck) Reset() {
	*x = DisconnectAck{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectAck) ProtoMessage() {}

func (x *DisconnectAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectAck.ProtoReflect.Descriptor instead.
func (*DisconnectAck) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{4}
}

type ResultsResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Status        MessageStatus             `protobuf:"varint,1,opt,name=status,proto3,enum=MessageStatus" json:"status,omitempty"`
	Results       []*ResultsResponse_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultsResponse) Reset() {
	*x = ResultsResponse{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsResponse) ProtoMessage() {}

func (x *ResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsResponse.ProtoReflect.Descriptor instead.
func (*ResultsResponse) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{5}
}

func (x *ResultsResponse) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_SUCCESS
}

func (x *ResultsResponse) GetResults() []*ResultsResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ServerClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerClientMessage_BatchAck
	//	*ServerClientMessage_FileEofAck
	//	*ServerClientMessage_SyncAck
	//	*ServerClientMessage_Results
	//	*ServerClientMessage_FinishAck
	//	*ServerClientMessage_DisconnectAck
	Message       isServerClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerClientMessage) Reset() {
	*x = ServerClientMessage{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerClientMessage) ProtoMessage() {}

func (x *ServerClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerClientMessage.ProtoReflect.Descriptor instead.
func (*ServerClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{6}
}

func (x *ServerClientMessage) GetMessage() isServerClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerClientMessage) GetBatchAck() *BatchAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_BatchAck); ok {
			return x.BatchAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetFileEofAck() *FileEOFAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_FileEofAck); ok {
			return x.FileEofAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetSyncAck() *SyncAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_SyncAck); ok {
			return x.SyncAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetResults() *ResultsResponse {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_Results); ok {
			return x.Results
		}
	}
	return nil
}

func (x *ServerClientMessage) GetFinishAck() *FinishAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_FinishAck); ok {
			return x.FinishAck
		}
	}
	return nil
}

func (x *ServerClientMessage) GetDisconnectAck() *DisconnectAck {
	if x != nil {
		if x, ok := x.Message.(*ServerClientMessage_DisconnectAck); ok {
			return x.DisconnectAck
		}
	}
	return nil
}

type isServerClientMessage_Message interface {
	isServerClientMessage_Message()
}

type ServerClientMessage_BatchAck struct {
	BatchAck *BatchAck `protobuf:"bytes,1,opt,name=batch_ack,json=batchAck,proto3,oneof"`
}

type ServerClientMessage_FileEofAck struct {
	FileEofAck *FileEOFAck `protobuf:"bytes,2,opt,name=file_eof_ack,json=fileEofAck,proto3,oneof"`
}

type ServerClientMessage_SyncAck struct {
	SyncAck *SyncAck `protobuf:"bytes,3,opt,name=sync_ack,json=syncAck,proto3,oneof"`
}

type ServerClientMessage_Results struct {
	Results *ResultsResponse `protobuf:"bytes,4,opt,name=results,proto3,oneof"`
}

type ServerClientMessage_FinishAck struct {
	FinishAck *FinishAck `protobuf:"bytes,5,opt,name=finish_ack,json=finishAck,proto3,oneof"`
}

type ServerClientMessage_DisconnectAck struct {
	DisconnectAck *DisconnectAck `protobuf:"bytes,6,opt,name=disconnect_ack,json=disconnectAck,proto3,oneof"`
}

func (*ServerClientMessage_BatchAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_FileEofAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_SyncAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_Results) isServerClientMessage_Message() {}

func (*ServerClientMessage_FinishAck) isServerClientMessage_Message() {}

func (*ServerClientMessage_DisconnectAck) isServerClientMessage_Message() {}

type ResultsResponse_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ResultsResponse_Result_Result1
	//	*ResultsResponse_Result_Result2
	//	*ResultsResponse_Result_Result3
	//	*ResultsResponse_Result_Result4
	//	*ResultsResponse_Result_Result5
	//	*ResultsResponse_Result_OmegaEOF
	Message        isResultsResponse_Result_Message `protobuf_oneof:"Message"`
	TaskIdentifier *TaskIdentifier                  `protobuf:"bytes,7,opt,name=task_identifier,json=taskIdentifier,proto3" json:"task_identifier,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResultsResponse_Result) Reset() {
	*x = ResultsResponse_Result{}
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultsResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsResponse_Result) ProtoMessage() {}

func (x *ResultsResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_server_to_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsResponse_Result.ProtoReflect.Descriptor instead.
func (*ResultsResponse_Result) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_server_to_client_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ResultsResponse_Result) GetMessage() isResultsResponse_Result_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ResultsResponse_Result) GetResult1() *Result1 {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_Result1); ok {
			return x.Result1
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetResult2() *Result2 {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_Result2); ok {
			return x.Result2
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetResult3() *Result3 {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_Result3); ok {
			return x.Result3
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetResult4() *Result4 {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_Result4); ok {
			return x.Result4
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetResult5() *Result5 {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_Result5); ok {
			return x.Result5
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetOmegaEOF() *OmegaEOF {
	if x != nil {
		if x, ok := x.Message.(*ResultsResponse_Result_OmegaEOF); ok {
			return x.OmegaEOF
		}
	}
	return nil
}

func (x *ResultsResponse_Result) GetTaskIdentifier() *TaskIdentifier {
	if x != nil {
		return x.TaskIdentifier
	}
	return nil
}

type isResultsResponse_Result_Message interface {
	isResultsResponse_Result_Message()
}

type ResultsResponse_Result_Result1 struct {
	Result1 *Result1 `protobuf:"bytes,1,opt,name=result1,proto3,oneof"`
}

type ResultsResponse_Result_Result2 struct {
	Result2 *Result2 `protobuf:"bytes,2,opt,name=result2,proto3,oneof"`
}

type ResultsResponse_Result_Result3 struct {
	Result3 *Result3 `protobuf:"bytes,3,opt,name=result3,proto3,oneof"`
}

type ResultsResponse_Result_Result4 struct {
	Result4 *Result4 `protobuf:"bytes,4,opt,name=result4,proto3,oneof"`
}

type ResultsResponse_Result_Result5 struct {
	Result5 *Result5 `protobuf:"bytes,5,opt,name=result5,proto3,oneof"`
}

type ResultsResponse_Result_OmegaEOF struct {
	OmegaEOF *OmegaEOF `protobuf:"bytes,6,opt,name=omegaEOF,proto3,oneof"`
}

func (*ResultsResponse_Result_Result1) isResultsResponse_Result_Message() {}

func (*ResultsResponse_Result_Result2) isResultsResponse_Result_Message() {}

func (*ResultsResponse_Result_Result3) isResultsResponse_Result_Message() {}

func (*ResultsResponse_Result_Result4) isResultsResponse_Result_Message() {}

func (*ResultsResponse_Result_Result5) isResultsResponse_Result_Message() {}

func (*ResultsResponse_Result_OmegaEOF) isResultsResponse_Result_Message() {}

var File_proto_client_server_messages_server_to_client_proto protoreflect.FileDescriptor

const file_proto_client_server_messages_server_to_client_proto_rawDesc = "" +
	"\n" +
	"3proto/client-server-messages/server-to-client.proto\x1a\x1bproto/results/result1.proto\x1a\x1bproto/results/result2.proto\x1a\x1bproto/results/result3.proto\x1a\x1bproto/results/result4.proto\x1a\x1bproto/results/result5.proto\x1a\x18proto/eof/omegaEOF.proto\x1a\x10proto/task.proto\"M\n" +
	"\bBatchAck\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.MessageStatusR\x06status\"4\n" +
	"\n" +
	"FileEOFAck\x12&\n" +
	"\x06status\x18\x01 \x01(\x0e2\x0e.MessageStatusR\x06status\"&\n" +
	"\aSyncAck\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\v\n" +
	"\tFinishAck\"\x0f\n" +
	"\rDisconnectAck\"\xa3\x03\n" +
	"\x0fResultsResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\x0e2\x0e.MessageStatusR\x06status\x121\n" +
	"\aresults\x18\x02 \x03(\v2\x17.ResultsResponse.ResultR\aresults\x1a\xb4\x02\n" +
	"\x06Result\x12$\n" +
	"\aresult1\x18\x01 \x01(\v2\b.Result1H\x00R\aresult1\x12$\n" +
	"\aresult2\x18\x02 \x01(\v2\b.Result2H\x00R\aresult2\x12$\n" +
	"\aresult3\x18\x03 \x01(\v2\b.Result3H\x00R\aresult3\x12$\n" +
	"\aresult4\x18\x04 \x01(\v2\b.Result4H\x00R\aresult4\x12$\n" +
	"\aresult5\x18\x05 \x01(\v2\b.Result5H\x00R\aresult5\x12'\n" +
	"\bomegaEOF\x18\x06 \x01(\v2\t.OmegaEOFH\x00R\bomegaEOF\x128\n" +
	"\x0ftask_identifier\x18\a \x01(\v2\x0f.TaskIdentifierR\x0etaskIdentifierB\t\n" +
	"\aMessage\"\xb6\x02\n" +
	"\x13ServerClientMessage\x12(\n" +
	"\tbatch_ack\x18\x01 \x01(\v2\t.BatchAckH\x00R\bbatchAck\x12/\n" +
	"\ffile_eof_ack\x18\x02 \x01(\v2\v.FileEOFAckH\x00R\n" +
	"fileEofAck\x12%\n" +
	"\bsync_ack\x18\x03 \x01(\v2\b.SyncAckH\x00R\asyncAck\x12,\n" +
	"\aresults\x18\x04 \x01(\v2\x10.ResultsResponseH\x00R\aresults\x12+\n" +
	"\n" +
	"finish_ack\x18\x05 \x01(\v2\n" +
	".FinishAckH\x00R\tfinishAck\x127\n" +
	"\x0edisconnect_ack\x18\x06 \x01(\v2\x0e.DisconnectAckH\x00R\rdisconnectAckB\t\n" +
	"\amessage*3\n" +
	"\rMessageStatus\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\b\n" +
	"\x04FAIL\x10\x01\x12\v\n" +
	"\aPENDING\x10\x02B\x1fZ\x1dcommon/communication/protocolb\x06proto3"

var (
	file_proto_client_server_messages_server_to_client_proto_rawDescOnce sync.Once
	file_proto_client_server_messages_server_to_client_proto_rawDescData []byte
)

func file_proto_client_server_messages_server_to_client_proto_rawDescGZIP() []byte {
	file_proto_client_server_messages_server_to_client_proto_rawDescOnce.Do(func() {
		file_proto_client_server_messages_server_to_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_server_to_client_proto_rawDesc), len(file_proto_client_server_messages_server_to_client_proto_rawDesc)))
	})
	return file_proto_client_server_messages_server_to_client_proto_rawDescData
}

var file_proto_client_server_messages_server_to_client_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_client_server_messages_server_to_client_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_client_server_messages_server_to_client_proto_goTypes = []any{
	(MessageStatus)(0),             // 0: MessageStatus
	(*BatchAck)(nil),               // 1: BatchAck
	(*FileEOFAck)(nil),             // 2: FileEOFAck
	(*SyncAck)(nil),                // 3: SyncAck
	(*FinishAck)(nil),              // 4: FinishAck
	(*DisconnectAck)(nil),          // 5: DisconnectAck
	(*ResultsResponse)(nil),        // 6: ResultsResponse
	(*ServerClientMessage)(nil),    // 7: ServerClientMessage
	(*ResultsResponse_Result)(nil), // 8: ResultsResponse.Result
	(*Result1)(nil),                // 9: Result1
	(*Result2)(nil),                // 10: Result2
	(*Result3)(nil),                // 11: Result3
	(*Result4)(nil),                // 12: Result4
	(*Result5)(nil),                // 13: Result5
	(*OmegaEOF)(nil),               // 14: OmegaEOF
	(*TaskIdentifier)(nil),         // 15: TaskIdentifier
}
var file_proto_client_server_messages_server_to_client_proto_depIdxs = []int32{
	0,  // 0: BatchAck.status:type_name -> MessageStatus
	0,  // 1: FileEOFAck.status:type_name -> MessageStatus
	0,  // 2: ResultsResponse.status:type_name -> MessageStatus
	8,  // 3: ResultsResponse.results:type_name -> ResultsResponse.Result
	1,  // 4: ServerClientMessage.batch_ack:type_name -> BatchAck
	2,  // 5: ServerClientMessage.file_eof_ack:type_name -> FileEOFAck
	3,  // 6: ServerClientMessage.sync_ack:type_name -> SyncAck
	6,  // 7: ServerClientMessage.results:type_name -> ResultsResponse
	4,  // 8: ServerClientMessage.finish_ack:type_name -> FinishAck
	5,  // 9: ServerClientMessage.disconnect_ack:type_name -> DisconnectAck
	9,  // 10: ResultsResponse.Result.result1:type_name -> Result1
	10, // 11: ResultsResponse.Result.result2:type_name -> Result2
	11, // 12: ResultsResponse.Result.result3:type_name -> Result3
	12, // 13: ResultsResponse.Result.result4:type_name -> Result4
	13, // 14: ResultsResponse.Result.result5:type_name -> Result5
	14, // 15: ResultsResponse.Result.omegaEOF:type_name -> OmegaEOF
	15, // 16: ResultsResponse.Result.task_identifier:type_name -> TaskIdentifier
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_client_server_messages_server_to_client_proto_init() }
func file_proto_client_server_messages_server_to_client_proto_init() {
	if File_proto_client_server_messages_server_to_client_proto != nil {
		return
	}
	file_proto_results_result1_proto_init()
	file_proto_results_result2_proto_init()
	file_proto_results_result3_proto_init()
	file_proto_results_result4_proto_init()
	file_proto_results_result5_proto_init()
	file_proto_eof_omegaEOF_proto_init()
	file_proto_task_proto_init()
	file_proto_client_server_messages_server_to_client_proto_msgTypes[6].OneofWrappers = []any{
		(*ServerClientMessage_BatchAck)(nil),
		(*ServerClientMessage_FileEofAck)(nil),
		(*ServerClientMessage_SyncAck)(nil),
		(*ServerClientMessage_Results)(nil),
		(*ServerClientMessage_FinishAck)(nil),
		(*ServerClientMessage_DisconnectAck)(nil),
	}
	file_proto_client_server_messages_server_to_client_proto_msgTypes[7].OneofWrappers = []any{
		(*ResultsResponse_Result_Result1)(nil),
		(*ResultsResponse_Result_Result2)(nil),
		(*ResultsResponse_Result_Result3)(nil),
		(*ResultsResponse_Result_Result4)(nil),
		(*ResultsResponse_Result_Result5)(nil),
		(*ResultsResponse_Result_OmegaEOF)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_server_to_client_proto_rawDesc), len(file_proto_client_server_messages_server_to_client_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_client_server_messages_server_to_client_proto_goTypes,
		DependencyIndexes: file_proto_client_server_messages_server_to_client_proto_depIdxs,
		EnumInfos:         file_proto_client_server_messages_server_to_client_proto_enumTypes,
		MessageInfos:      file_proto_client_server_messages_server_to_client_proto_msgTypes,
	}.Build()
	File_proto_client_server_messages_server_to_client_proto = out.File
	file_proto_client_server_messages_server_to_client_proto_goTypes = nil
	file_proto_client_server_messages_server_to_client_proto_depIdxs = nil
}
