// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/client-server-messages/client-to-server.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_MOVIES  FileType = 0
	FileType_CREDITS FileType = 1
	FileType_RATINGS FileType = 2
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "MOVIES",
		1: "CREDITS",
		2: "RATINGS",
	}
	FileType_value = map[string]int32{
		"MOVIES":  0,
		"CREDITS": 1,
		"RATINGS": 2,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_client_server_messages_client_to_server_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_proto_client_server_messages_client_to_server_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{0}
}

type Sync struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sync) Reset() {
	*x = Sync{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sync) ProtoMessage() {}

func (x *Sync) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sync.ProtoReflect.Descriptor instead.
func (*Sync) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{0}
}

func (x *Sync) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Finish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finish) Reset() {
	*x = Finish{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finish) ProtoMessage() {}

func (x *Finish) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finish.ProtoReflect.Descriptor instead.
func (*Finish) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{1}
}

func (x *Finish) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Disconnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{2}
}

func (x *Disconnect) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Batch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FileType               `protobuf:"varint,1,opt,name=type,proto3,enum=FileType" json:"type,omitempty"`
	Data          []*Batch_Row           `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	ClientId      string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	BatchNumber   uint32                 `protobuf:"varint,4,opt,name=batch_number,json=batchNumber,proto3" json:"batch_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{4}
}

func (x *Batch) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_MOVIES
}

func (x *Batch) GetData() []*Batch_Row {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Batch) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Batch) GetBatchNumber() uint32 {
	if x != nil {
		return x.BatchNumber
	}
	return 0
}

type FileEOF struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FileType               `protobuf:"varint,1,opt,name=type,proto3,enum=FileType" json:"type,omitempty"`
	BatchCount    uint32                 `protobuf:"varint,2,opt,name=batch_count,json=batchCount,proto3" json:"batch_count,omitempty"`
	ClientId      string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEOF) Reset() {
	*x = FileEOF{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEOF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEOF) ProtoMessage() {}

func (x *FileEOF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEOF.ProtoReflect.Descriptor instead.
func (*FileEOF) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{5}
}

func (x *FileEOF) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_MOVIES
}

func (x *FileEOF) GetBatchCount() uint32 {
	if x != nil {
		return x.BatchCount
	}
	return 0
}

func (x *FileEOF) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type ClientServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ClientServerMessage_Batch
	//	*ClientServerMessage_FileEof
	//	*ClientServerMessage_Sync
	//	*ClientServerMessage_Finish
	//	*ClientServerMessage_Result
	//	*ClientServerMessage_Disconnect
	Message       isClientServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientServerMessage) Reset() {
	*x = ClientServerMessage{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientServerMessage) ProtoMessage() {}

func (x *ClientServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientServerMessage.ProtoReflect.Descriptor instead.
func (*ClientServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{6}
}

func (x *ClientServerMessage) GetMessage() isClientServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ClientServerMessage) GetBatch() *Batch {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_Batch); ok {
			return x.Batch
		}
	}
	return nil
}

func (x *ClientServerMessage) GetFileEof() *FileEOF {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_FileEof); ok {
			return x.FileEof
		}
	}
	return nil
}

func (x *ClientServerMessage) GetSync() *Sync {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_Sync); ok {
			return x.Sync
		}
	}
	return nil
}

func (x *ClientServerMessage) GetFinish() *Finish {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_Finish); ok {
			return x.Finish
		}
	}
	return nil
}

func (x *ClientServerMessage) GetResult() *Result {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_Result); ok {
			return x.Result
		}
	}
	return nil
}

func (x *ClientServerMessage) GetDisconnect() *Disconnect {
	if x != nil {
		if x, ok := x.Message.(*ClientServerMessage_Disconnect); ok {
			return x.Disconnect
		}
	}
	return nil
}

type isClientServerMessage_Message interface {
	isClientServerMessage_Message()
}

type ClientServerMessage_Batch struct {
	Batch *Batch `protobuf:"bytes,1,opt,name=batch,proto3,oneof"`
}

type ClientServerMessage_FileEof struct {
	FileEof *FileEOF `protobuf:"bytes,2,opt,name=file_eof,json=fileEof,proto3,oneof"`
}

type ClientServerMessage_Sync struct {
	Sync *Sync `protobuf:"bytes,3,opt,name=sync,proto3,oneof"`
}

type ClientServerMessage_Finish struct {
	Finish *Finish `protobuf:"bytes,4,opt,name=finish,proto3,oneof"`
}

type ClientServerMessage_Result struct {
	Result *Result `protobuf:"bytes,5,opt,name=result,proto3,oneof"`
}

type ClientServerMessage_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,6,opt,name=disconnect,proto3,oneof"`
}

func (*ClientServerMessage_Batch) isClientServerMessage_Message() {}

func (*ClientServerMessage_FileEof) isClientServerMessage_Message() {}

func (*ClientServerMessage_Sync) isClientServerMessage_Message() {}

func (*ClientServerMessage_Finish) isClientServerMessage_Message() {}

func (*ClientServerMessage_Result) isClientServerMessage_Message() {}

func (*ClientServerMessage_Disconnect) isClientServerMessage_Message() {}

type Batch_Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Batch_Row) Reset() {
	*x = Batch_Row{}
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch_Row) ProtoMessage() {}

func (x *Batch_Row) ProtoReflect() protoreflect.Message {
	mi := &file_proto_client_server_messages_client_to_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch_Row.ProtoReflect.Descriptor instead.
func (*Batch_Row) Descriptor() ([]byte, []int) {
	return file_proto_client_server_messages_client_to_server_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Batch_Row) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_proto_client_server_messages_client_to_server_proto protoreflect.FileDescriptor

const file_proto_client_server_messages_client_to_server_proto_rawDesc = "" +
	"\n" +
	"3proto/client-server-messages/client-to-server.proto\"#\n" +
	"\x04Sync\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"%\n" +
	"\x06Finish\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\")\n" +
	"\n" +
	"Disconnect\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"%\n" +
	"\x06Result\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\xa1\x01\n" +
	"\x05Batch\x12\x1d\n" +
	"\x04type\x18\x01 \x01(\x0e2\t.FileTypeR\x04type\x12\x1e\n" +
	"\x04data\x18\x02 \x03(\v2\n" +
	".Batch.RowR\x04data\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\x12!\n" +
	"\fbatch_number\x18\x04 \x01(\rR\vbatchNumber\x1a\x19\n" +
	"\x03Row\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"f\n" +
	"\aFileEOF\x12\x1d\n" +
	"\x04type\x18\x01 \x01(\x0e2\t.FileTypeR\x04type\x12\x1f\n" +
	"\vbatch_count\x18\x02 \x01(\rR\n" +
	"batchCount\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\"\xf9\x01\n" +
	"\x13ClientServerMessage\x12\x1e\n" +
	"\x05batch\x18\x01 \x01(\v2\x06.BatchH\x00R\x05batch\x12%\n" +
	"\bfile_eof\x18\x02 \x01(\v2\b.FileEOFH\x00R\afileEof\x12\x1b\n" +
	"\x04sync\x18\x03 \x01(\v2\x05.SyncH\x00R\x04sync\x12!\n" +
	"\x06finish\x18\x04 \x01(\v2\a.FinishH\x00R\x06finish\x12!\n" +
	"\x06result\x18\x05 \x01(\v2\a.ResultH\x00R\x06result\x12-\n" +
	"\n" +
	"disconnect\x18\x06 \x01(\v2\v.DisconnectH\x00R\n" +
	"disconnectB\t\n" +
	"\amessage*0\n" +
	"\bFileType\x12\n" +
	"\n" +
	"\x06MOVIES\x10\x00\x12\v\n" +
	"\aCREDITS\x10\x01\x12\v\n" +
	"\aRATINGS\x10\x02B\x1fZ\x1dcommon/communication/protocolb\x06proto3"

var (
	file_proto_client_server_messages_client_to_server_proto_rawDescOnce sync.Once
	file_proto_client_server_messages_client_to_server_proto_rawDescData []byte
)

func file_proto_client_server_messages_client_to_server_proto_rawDescGZIP() []byte {
	file_proto_client_server_messages_client_to_server_proto_rawDescOnce.Do(func() {
		file_proto_client_server_messages_client_to_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_client_to_server_proto_rawDesc), len(file_proto_client_server_messages_client_to_server_proto_rawDesc)))
	})
	return file_proto_client_server_messages_client_to_server_proto_rawDescData
}

var file_proto_client_server_messages_client_to_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_client_server_messages_client_to_server_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_client_server_messages_client_to_server_proto_goTypes = []any{
	(FileType)(0),               // 0: FileType
	(*Sync)(nil),                // 1: Sync
	(*Finish)(nil),              // 2: Finish
	(*Disconnect)(nil),          // 3: Disconnect
	(*Result)(nil),              // 4: Result
	(*Batch)(nil),               // 5: Batch
	(*FileEOF)(nil),             // 6: FileEOF
	(*ClientServerMessage)(nil), // 7: ClientServerMessage
	(*Batch_Row)(nil),           // 8: Batch.Row
}
var file_proto_client_server_messages_client_to_server_proto_depIdxs = []int32{
	0, // 0: Batch.type:type_name -> FileType
	8, // 1: Batch.data:type_name -> Batch.Row
	0, // 2: FileEOF.type:type_name -> FileType
	5, // 3: ClientServerMessage.batch:type_name -> Batch
	6, // 4: ClientServerMessage.file_eof:type_name -> FileEOF
	1, // 5: ClientServerMessage.sync:type_name -> Sync
	2, // 6: ClientServerMessage.finish:type_name -> Finish
	4, // 7: ClientServerMessage.result:type_name -> Result
	3, // 8: ClientServerMessage.disconnect:type_name -> Disconnect
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_client_server_messages_client_to_server_proto_init() }
func file_proto_client_server_messages_client_to_server_proto_init() {
	if File_proto_client_server_messages_client_to_server_proto != nil {
		return
	}
	file_proto_client_server_messages_client_to_server_proto_msgTypes[6].OneofWrappers = []any{
		(*ClientServerMessage_Batch)(nil),
		(*ClientServerMessage_FileEof)(nil),
		(*ClientServerMessage_Sync)(nil),
		(*ClientServerMessage_Finish)(nil),
		(*ClientServerMessage_Result)(nil),
		(*ClientServerMessage_Disconnect)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_client_server_messages_client_to_server_proto_rawDesc), len(file_proto_client_server_messages_client_to_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_client_server_messages_client_to_server_proto_goTypes,
		DependencyIndexes: file_proto_client_server_messages_client_to_server_proto_depIdxs,
		EnumInfos:         file_proto_client_server_messages_client_to_server_proto_enumTypes,
		MessageInfos:      file_proto_client_server_messages_client_to_server_proto_msgTypes,
	}.Build()
	File_proto_client_server_messages_client_to_server_proto = out.File
	file_proto_client_server_messages_client_to_server_proto_goTypes = nil
	file_proto_client_server_messages_client_to_server_proto_depIdxs = nil
}
